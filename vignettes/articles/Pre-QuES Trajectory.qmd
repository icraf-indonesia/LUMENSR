---
title: "PreQuES-Land Use Change Trajectory Analysis"
format: 
   html:
     df-print: kable
toc: true
number-sections: true
editor: visual
editor_options: 
  chunk_output_type: inline
execute:
  cache: false
engine: knitr
---
```{r eval=FALSE, include=FALSE}
# key raster inputs: lc_t1_, lc_t2_, admin_
# key table inputs: lookup_traj_reclass, lookup_trajectory_complete
# key column inputs : trajectory and def

# key raster output: map_trajectory, map_deforest_degrad
```


```{r Load land cover data include=FALSE}
# Prepare a lookup table by abbreviating column 'PL20' in the predefined table 'lc_lookup_klhk_sequence'
lookup_tbl <- lc_lookup_klhk_sequence %>% abbreviate_by_column(col_names = "PL20")

# Load the land cover data for period 1990 from the provided example data set in LUMENSR package
# Convert the loaded data to a raster using terra::rast()
# Add a legend to the categorical raster using the lookup table created earlier
lc_t1_ <- LUMENSR_example("NTT_LC90.tif") %>%
  terra::rast() %>%
  add_legend_to_categorical_raster(
    raster_file = .,
    lookup_table = lookup_tbl
  ) %>% 
  assign_time_period(year_ = "1990")

# Similarly, load the land cover data for period 2020 and add the legend
lc_t2_ <- LUMENSR_example("NTT_LC20.tif") %>%
  terra::rast() %>%
  add_legend_to_categorical_raster(
    raster_file = .,
    lookup_table = lookup_tbl
  ) %>% 
  assign_time_period(year_ = "2020")

# Load the planning unit data. Note that 'ntt_admin' must be defined somewhere earlier in the code.
admin_z <- ntt_admin %>% rasterise_multipolygon()
```


```{r trajectory map}
traj_analysis_output <- ques_pre_trajectory(lc_t1_ = lc_t1_, lc_t2_ = lc_t2_, admin_ = admin_z, lookup_traj_reclass = lookup_traj_reclass, lookup_trajectory_complete = lookup_trajectory_complete, trajectory_column_name = "trajectory", convert_to_Ha = TRUE)
```

```{r deforest/degrad map}
def_analysis_output <- ques_pre_trajectory(lc_t1_ = lc_t1_, lc_t2_ = lc_t2_, admin_ = admin_z, lookup_traj_reclass = lookup_traj_reclass, lookup_trajectory_complete = lookup_trajectory_complete, trajectory_column_name = "def", convert_to_Ha = TRUE)
```
